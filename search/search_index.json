{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Syngle Documentation : <a href=\"https://valentincalomme.github.io/syngle/\" target=\"_blank\" >https://typer.tiangolo.com Source Code : https://github.com/ValentinCalomme/syngle/ Table of Contents About Installation Usage About Simple package implementing the Singleton pattern as a mixin class. Installation Simply pip install the package! pip install syngle The package only has Python as a dependency to remain. It was developed for Python 3.8+ and has not been tested for prior versions. Usage Simply import the Singleton class and make your classess extend it. from syngle import Singleton class MyClass ( Singleton ): pass myclass1 = MyClass () myclass2 = MyClass () assert myclass1 is myclass2","title":"Home"},{"location":"#syngle","text":"Documentation : <a href=\"https://valentincalomme.github.io/syngle/\" target=\"_blank\" >https://typer.tiangolo.com Source Code : https://github.com/ValentinCalomme/syngle/","title":"Syngle"},{"location":"#table-of-contents","text":"About Installation Usage","title":"Table of Contents"},{"location":"#about","text":"Simple package implementing the Singleton pattern as a mixin class.","title":"About"},{"location":"#installation","text":"Simply pip install the package! pip install syngle The package only has Python as a dependency to remain. It was developed for Python 3.8+ and has not been tested for prior versions.","title":"Installation"},{"location":"#usage","text":"Simply import the Singleton class and make your classess extend it. from syngle import Singleton class MyClass ( Singleton ): pass myclass1 = MyClass () myclass2 = MyClass () assert myclass1 is myclass2","title":"Usage"}]}